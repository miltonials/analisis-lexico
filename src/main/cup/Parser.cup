package com.compi;

import java_cup.runtime.*;
import java.io.*;
import java.util.*;
import java.lang.Math;
import java_cup.runtime.Symbol;
import java.util.Stack;

/**
 * Clase principal del compilador
 */
class Parser;

action code {:
        public void hola() {
            System.out.println("Hola");
        }

        public void error(String mensaje) {
            System.out.println(mensaje);
        }

        public void error(String mensaje, int linea, int columna) {
            System.out.println("Error en la linea " + linea + " columna " + columna + ": " + mensaje);
        }

        public void error(String mensaje, int linea, int columna, String token) {
            System.out.println("Error en la linea " + linea + " columna " + columna + ": " + mensaje + " " + token);
        }
:}

parser code {:
        IdLexer miParser;

        @SuppressWarnings("deprecation")
        public Parser(IdLexer miParser) {
                this.miParser = miParser;
                this.symbolFactory = new DefaultSymbolFactory();
        }

        public void syntax_error(Symbol s) {
                System.err.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+2)+" columna "+(s.right+1) );
        }

        public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
                System.err.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+2)+" columna "+(s.right+1) );
        }

:}

init with {: :};

scan with {: return miParser.next_token(); :};

/* Terminales */

// Operadores aritméticos binarios
terminal RUDOLPH; // +
terminal  DASHER; // -
terminal  DANCER; // /
terminal  PRANCER; // // (division entera)
terminal  VIXEN; // *
terminal  COMET; // ~
terminal CUPID; // **
// Operadores aritméticos unarios
terminal  GRINCH; // ++
terminal  QUIEN; // --
// Operadores relacionales
terminal  HERMEY; // <
terminal  BUDDY; // =<
terminal  JINGLE; // >
terminal JANGLE; // >=
terminal  PEPPERMINT; // ==
terminal  WUNORSE; // !=
// Operadores lógicos
terminal  MELCHOR; // ^
terminal  GASPAR; // #
terminal BALTASAR; // !
terminal  LOCAL; // variable

// Tipos
terminal String PERSONA; // identificador
terminal Integer SANTACLAUS; // int
terminal Double PERENOEL; // float
terminal Boolean FATHERCHRISTMAS; // boolean
terminal Character KRISKRINGLE; // char
terminal String DEDMOROZ; // string
terminal Integer[] PAPANOEL; // array
terminal Integer L_SANTACLAUS; // literal int
terminal Double L_PERENOEL; // literal float
terminal Boolean L_FATHERCHRISTMAS; // literal boolean
terminal Character L_KRISKRINGLE; // literal char
terminal String L_DEDMOROZ; // literal string
terminal Integer[] L_PAPANOEL; // literal array

// Parentesis
terminal Integer ABRECUENTO; // (
terminal Integer CIERRECUENTO; // )
terminal Integer ABREEMPAQUE; // [
terminal Integer CIERREEMPAQUE; // ]
terminal Integer ABREREGALO; // {
terminal Integer CIERRAREGALO; // }

// Estructuras de control
terminal Integer ELFO;//if
terminal Integer HADA;//else
terminal Integer DUENDE;//else
terminal Integer ENVUELVE;//for
terminal Integer HACE;//do
terminal Integer REVISA;//until
terminal Integer ENVIA;//return
terminal Integer CORTA;//break

// Entrada y salida
terminal Integer NARRA;//print
terminal Integer ESCUCHA;//read 

// Fin de expresión
terminal  FINREGALO; // |

// Lexema separador
terminal Integer COMA; //,

// Asignación
terminal Integer ENTREGA;//<=

// Comentarios
// son ignorados por el compilador

// Funciones
terminal Integer MAIN; //main
terminal Integer REGALO; // definicion de funcion 
//terminal Integer FUNCTION; // definicion de funcion 

//-------------------------------------------------------------------------------------- NO Terminales
non terminal navidad; // Símbolo inicial ✅
non terminal bolsanavidena; // produccion para funciones ✅
//non terminal regalo; // produccion para expresiones
non terminal regaloprincipal; // produccion para main ✅
non terminal regalofuncional; // produccion para funciones ✅
non terminal regalofuncionaltipado; // produccion para funciones ✅
non terminal juguetes; // produccion para expresiones ✅
non terminal tipojuguetes; // produccion para expresiones ✅
//non terminal garantia;
//non terminal tiposregalo; // produccion para expresiones ✅
non terminal regalofuncionalentero; // produccion para funciones int
non terminal regalofuncionalflotante; // produccion para funciones float
non terminal regalofuncionaldelaverdad; // produccion para funciones boolean
non terminal regalofuncionalcharmander; // produccion para funciones char
non terminal encabezadoregalofuncional; // produccion para "nombreFuncion params {"
//non terminal dedicatoriasenteras; // produccion para " return int| } "
//non terminal dedicatoriasflotantes; // produccion para  " return float| } "
non terminal dedicatoriasdelaverdad; // produccion para " return boolean| } "
non terminal dedicatoriascharmander; // produccion para  " return char| } "
non terminal monnos; // produccion para parametros de funcion ✅
non terminal tiposmonnos; // produccion para parametros de funcion ✅
//non terminal envolturas; // produccion para envolturas ✅
non terminal juguetesaritmeticos; // produccion para expresiones aritméticas ✅
//non terminal piezasenteras; // produccion para expresiones aritméticas ✅
non terminal piezasunarias; // producción para expresiones unarias ✅
//non terminal piezasflotantes; // produccion para expresiones aritméticas ✅
non terminal juguetesrelacionales; // produccion para expresiones relacionales
non terminal piezasrelacionales; // produccion para expresiones relacionales ✅
non terminal jugueteslogicos; // produccion para expresiones lógicas ✅
non terminal juguetesunarios; // produccion para expresiones unarias ✅
non terminal jugueteasignacion; // produccion para expresiones de asignacion y ciclos✅
non terminal arreglosarreglados; // produccion para arreglos ✅
//non terminal piezaarregloentero; // produccion para arreglos ✅
//non terminal piezaarregloflotante; // produccion para arreglos ✅
non terminal piezaarreglobooleano; // produccion para arreglos ✅
non terminal piezaarreglochar; // produccion para arreglos ✅
non terminal piezaarreglostring; // produccion para arreglos ✅
non terminal piezaarregloarreglo; // produccion para arreglos ✅
non terminal juguetesdecontrol; // produccion para if-elif-else ✅
non terminal dedicatoriasaritmeticas;
non terminal piezaarregloaritmetico;
non terminal juguetesaritmeticos_operadores;
non terminal piezaarreglo_id;
non terminal juguetesdefinidos;
non terminal controldejuguete;
non terminal adicionalesdecontrol;
non terminal iteradordejuguetes;
non terminal parametrosdeenvoltura;
non terminal jugueteparlanchin;
non terminal juguetechismoso;
non terminal etiquetanavidena;

//-------------------------------------------------------------------------------------- PRECEDENCIA
// sirve para definir la precedencia de los operadores
// por ejemplo, si se define que * tiene mayor precedencia que +, entonces
// 2 + 3 * 4 = 14
// (2 + 3) * 4 = 20
// 2 + (3 * 4) = 14
// 2 * 3 + 4 = 10
precedence left RUDOLPH, DASHER; // suma y resta
precedence left DANCER, PRANCER; // division y division entera
precedence left VIXEN, COMET; // multiplicacion y modulo
precedence left CUPID; // potencia
precedence left GRINCH, QUIEN; // incremento y decremento
precedence left HERMEY, BUDDY, JINGLE, JANGLE, PEPPERMINT, WUNORSE; // operadores relacionales
precedence left MELCHOR, GASPAR; // operadores lógicos
precedence left BALTASAR; // operador lógico not
//precedence left ABRECUENTO, CIERRECUENTO; // parentesis
//precedence left ABREEMPAQUE, CIERREEMPAQUE; // corchetes
//precedence left ABREREGALO, CIERRAREGALO; // llaves
//precedence left ELFO, HADA, DUENDE, ENVUELVE, HACE, REVISA, ENVIA, CORTA; // estructuras de control
//precedence left NARRA, ESCUCHA; // entrada y salida
//precedence left FINREGALO; // fin de expresión
precedence left COMA; // lexema separador
//precedence left ENTREGA; // asignacion
//precedence left MAIN; // main
//precedence left REGALO; // definicion de funcion
//precedence left SANTACLAUS, PERENOEL, FATHERCHRISTMAS, KRISKRINGLE, DEDMOROZ, PAPANOEL; // tipos
//precedence left PERSONA, L_SANTACLAUS, L_PERENOEL, L_FATHERCHRISTMAS, L_KRISKRINGLE, L_DEDMOROZ, L_PAPANOEL; // identificadores y literales




//-------------------------------------------------------------------------------------- PRODUCCIONES
/* Símbolo inicial y producciones gramaticales*/
start with navidad;

/* Producciones gramaticales */
navidad ::= bolsanavidena;

bolsanavidena ::=  regaloprincipal | regalofuncional regaloprincipal;
//               | bolsanavidena regalofuncional regaloprincipal;

regaloprincipal ::= REGALO SANTACLAUS MAIN ABRECUENTO  CIERRECUENTO ABREREGALO
                        juguetes
                        dedicatoriasaritmeticas;

//Funciones
regalofuncional ::= regalofuncionaltipado | regalofuncional regalofuncionaltipado;

regalofuncionaltipado ::= regalofuncionalentero | regalofuncionalflotante | regalofuncionaldelaverdad
                | regalofuncionalcharmander;// | regalofuncionalencadenado | regalofuncionalarreglado;

regalofuncionalentero ::= REGALO SANTACLAUS encabezadoregalofuncional juguetes dedicatoriasaritmeticas;
regalofuncionalflotante ::= REGALO PERENOEL encabezadoregalofuncional juguetes dedicatoriasaritmeticas;
regalofuncionaldelaverdad ::= REGALO FATHERCHRISTMAS encabezadoregalofuncional juguetes dedicatoriasdelaverdad;
regalofuncionalcharmander ::= REGALO KRISKRINGLE encabezadoregalofuncional juguetes dedicatoriascharmander;


dedicatoriasaritmeticas ::= ENVIA juguetesaritmeticos FINREGALO CIERRAREGALO;
dedicatoriasdelaverdad ::= ENVIA jugueteslogicos FINREGALO CIERRAREGALO | ENVIA PERSONA FINREGALO CIERRAREGALO;
dedicatoriascharmander ::= ENVIA L_KRISKRINGLE FINREGALO CIERRAREGALO | ENVIA PERSONA FINREGALO CIERRAREGALO;

//para parametros
encabezadoregalofuncional ::= PERSONA ABRECUENTO CIERRECUENTO ABREREGALO
                | PERSONA ABRECUENTO monnos CIERRECUENTO ABREREGALO;


// Parámetros de la función
monnos ::= tiposmonnos | tiposmonnos COMA monnos;

// tiposmonnos son los diferentes tipos de parámetros de la función
tiposmonnos ::= SANTACLAUS PERSONA // int identificador
            | PERENOEL PERSONA // float identificador
            | FATHERCHRISTMAS PERSONA // boolean identificador
            | KRISKRINGLE PERSONA // char identificador
            | DEDMOROZ PERSONA // string identificador
            | PAPANOEL PERSONA; // array identificador

juguetes ::= etiquetanavidena
        | etiquetanavidena CORTA FINREGALO
        | etiquetanavidena CORTA FINREGALO etiquetanavidena;

etiquetanavidena ::= tipojuguetes | tipojuguetes etiquetanavidena;

tipojuguetes ::= juguetesaritmeticos FINREGALO // aritméticas (sumas, restas, etc)✅
         | juguetesrelacionales FINREGALO // expresiones relacionales (menor, mayor, etc) 
         | jugueteslogicos FINREGALO// expresiones lógicas (and, or, etc) 
         //| juguetesunarios // expresiones unarias (incremento, decremento, etc)
         | juguetesdefinidos FINREGALO // expresiones de definicion de variables
         | jugueteasignacion FINREGALO // expresiones de asignacion y ciclos
         | juguetesdecontrol
         | iteradordejuguetes
         | jugueteparlanchin FINREGALO
         | juguetechismoso FINREGALO;

jugueteparlanchin ::= NARRA ABRECUENTO PERSONA CIERRECUENTO | NARRA ABRECUENTO L_DEDMOROZ CIERRECUENTO;//TODO: concatenación de strings
juguetechismoso ::= ESCUCHA ABRECUENTO L_DEDMOROZ CIERRECUENTO
                | ESCUCHA ABRECUENTO CIERRECUENTO
                | ESCUCHA ABRECUENTO PERSONA CIERRECUENTO
                | LOCAL DEDMOROZ PERSONA ENTREGA ESCUCHA ABRECUENTO L_DEDMOROZ CIERRECUENTO
                | LOCAL DEDMOROZ PERSONA ENTREGA ESCUCHA ABRECUENTO CIERRECUENTO;

// aritméticas (sumas, restas, etc)
juguetesaritmeticos ::= juguetesaritmeticos RUDOLPH juguetesaritmeticos // +
                     |  juguetesaritmeticos DASHER juguetesaritmeticos // -
                     |  juguetesaritmeticos DANCER juguetesaritmeticos // /
                     |  juguetesaritmeticos PRANCER juguetesaritmeticos // //
                     |  juguetesaritmeticos VIXEN juguetesaritmeticos // *
                     |  juguetesaritmeticos COMET juguetesaritmeticos // ~
                     |  juguetesaritmeticos CUPID juguetesaritmeticos // **
                     |  ABRECUENTO juguetesaritmeticos CIERRECUENTO // (expr)
                     |  ABRECUENTO juguetesaritmeticos CIERRECUENTO juguetesaritmeticos_operadores juguetesaritmeticos // (expr) + expr
                     |  juguetesaritmeticos juguetesaritmeticos_operadores ABRECUENTO juguetesaritmeticos CIERRECUENTO // (expr) + expr
                     | juguetesunarios // ++ o --
                     |  PERSONA
                     |  L_PERENOEL
                     |  L_SANTACLAUS;

juguetesaritmeticos_operadores ::= RUDOLPH
                |  DASHER
                |  DANCER
                |  PRANCER
                |  VIXEN
                |  COMET
                |  CUPID;

/*
piezasenteras ::= piezasenteras RUDOLPH piezasenteras // +
                     |  piezasenteras DASHER piezasenteras // -
                     |  piezasenteras DANCER piezasenteras // /
                     |  piezasenteras PRANCER piezasenteras // //
                     |  piezasenteras VIXEN piezasenteras // *
                     |  piezasenteras COMET piezasenteras // ~
                     |  piezasenteras CUPID piezasenteras // **
                     |  ABRECUENTO piezasenteras CIERRECUENTO // (expr)
                     |  ABRECUENTO piezasenteras CIERRECUENTO piezasenteras // (expr) + expr
                     |  PERSONA
                     |  L_SANTACLAUS;

piezasflotantes ::= piezasflotantes RUDOLPH piezasflotantes // +
                     |  piezasflotantes DASHER piezasflotantes // -
                     |  piezasflotantes DANCER piezasflotantes // /
                     |  piezasflotantes PRANCER piezasflotantes // //
                     |  piezasflotantes VIXEN piezasflotantes // *
                     |  piezasflotantes COMET piezasflotantes // ~
                     |  piezasflotantes CUPID piezasflotantes // **
                     |  ABRECUENTO piezasflotantes CIERRECUENTO // (expr)
                     |  ABRECUENTO piezasflotantes CIERRECUENTO piezasflotantes // (expr) + expr
                     //|  PERSONA // produce conflicto con piezasenteras
                     |  L_PERENOEL;
*/

// relacionales (menor, mayor, etc)
juguetesrelacionales ::= juguetesaritmeticos piezasrelacionales juguetesaritmeticos; // enteros
        //| juguetesaritmeticos piezasrelacionales juguetesaritmeticos; // flotantes
        //| piezasenteras piezasrelacionales piezasflotantes // enteros y flotantes
        //| piezasflotantes piezasrelacionales piezasenteras; // flotantes y enteros

piezasrelacionales ::= HERMEY // <
        | BUDDY // =<
        | JINGLE // >
        | JANGLE // >=
        | PEPPERMINT // ==
        | WUNORSE; // !=

// lógicos (and, or, negacion)
jugueteslogicos ::= jugueteslogicos MELCHOR jugueteslogicos // AND
        | jugueteslogicos GASPAR jugueteslogicos // OR
        | BALTASAR jugueteslogicos // NOT
        | ABRECUENTO jugueteslogicos CIERRECUENTO // (expr)
        | ABRECUENTO jugueteslogicos CIERRECUENTO jugueteslogicos // (expr) op expr
        //| jugueteslogicos ABRECUENTO jugueteslogicos CIERRECUENTO // expr op (expr)
        //| PERSONA // identificador
        | L_FATHERCHRISTMAS;

// unarios (incremento, decremento, etc)
juguetesunarios ::= piezasunarias juguetesaritmeticos; // ++ o --
                //| GRINCH ABRECUENTO juguetesaritmeticos CIERRECUENTO FINREGALO // ++(expr)
                //| QUIEN ABRECUENTO juguetesaritmeticos CIERRECUENTO FINREGALO; // --(expr)

piezasunarias ::=  GRINCH | QUIEN;


// asignacion <=
jugueteasignacion ::= LOCAL SANTACLAUS PERSONA ENTREGA juguetesaritmeticos // enteros
        | LOCAL SANTACLAUS PERSONA ENTREGA GRINCH juguetesaritmeticos// ++enteros
        | LOCAL SANTACLAUS PERSONA ENTREGA QUIEN juguetesaritmeticos// --enteros
        | LOCAL PERENOEL PERSONA ENTREGA juguetesaritmeticos // flotantes
        | LOCAL PERENOEL PERSONA ENTREGA GRINCH juguetesaritmeticos// ++flotantes
        | LOCAL PERENOEL PERSONA ENTREGA QUIEN juguetesaritmeticos// --flotantes
        | LOCAL FATHERCHRISTMAS PERSONA ENTREGA jugueteslogicos // booleanos
        | LOCAL KRISKRINGLE PERSONA ENTREGA L_KRISKRINGLE // caracteres
        | LOCAL DEDMOROZ PERSONA ENTREGA L_DEDMOROZ // strings ⚠️ valorar utilizar produccion de strings
        | LOCAL PAPANOEL PERSONA ENTREGA ABREEMPAQUE arreglosarreglados CIERREEMPAQUE
        | PERSONA ENTREGA juguetesaritmeticos // enteros
        | PERSONA ENTREGA GRINCH juguetesaritmeticos// ++enteros
        | PERSONA ENTREGA QUIEN juguetesaritmeticos// --enteros
        | PERSONA ENTREGA jugueteslogicos // booleanos
        | PERSONA ENTREGA L_KRISKRINGLE // caracteres
        | PERSONA ENTREGA L_DEDMOROZ // strings ⚠️ valorar utilizar produccion de strings
        | PERSONA ENTREGA ABREEMPAQUE arreglosarreglados CIERREEMPAQUE;

juguetesdefinidos ::= LOCAL tiposmonnos;

arreglosarreglados ::= piezaarregloaritmetico
        | piezaarreglobooleano
        | piezaarreglochar
        | piezaarreglostring
        | piezaarregloarreglo
        | piezaarreglo_id;

piezaarregloaritmetico ::= juguetesaritmeticos | juguetesaritmeticos COMA piezaarregloaritmetico;
piezaarreglobooleano ::= jugueteslogicos | jugueteslogicos COMA piezaarreglobooleano;
piezaarreglochar ::= L_KRISKRINGLE | L_KRISKRINGLE COMA piezaarreglochar;
piezaarreglostring ::= L_DEDMOROZ | L_DEDMOROZ COMA piezaarreglostring;
piezaarregloarreglo ::= ABREEMPAQUE arreglosarreglados CIERREEMPAQUE
        | ABREEMPAQUE arreglosarreglados CIERREEMPAQUE COMA arreglosarreglados
        ;
piezaarreglo_id ::= PERSONA COMA arreglosarreglados;

// estructuras de control
juguetesdecontrol ::= ELFO ABRECUENTO controldejuguete CIERRECUENTO ABREREGALO juguetes CIERRAREGALO
                | ELFO ABRECUENTO controldejuguete CIERRECUENTO ABREREGALO juguetes CIERRAREGALO adicionalesdecontrol;

adicionalesdecontrol ::= HADA ABRECUENTO controldejuguete CIERRECUENTO ABREREGALO juguetes CIERRAREGALO 
                | HADA ABRECUENTO controldejuguete CIERRECUENTO ABREREGALO juguetes CIERRAREGALO adicionalesdecontrol
                | DUENDE ABREREGALO juguetes CIERRAREGALO;



controldejuguete ::= juguetesrelacionales | jugueteslogicos;

iteradordejuguetes ::= ENVUELVE ABRECUENTO parametrosdeenvoltura CIERRECUENTO ABREREGALO juguetes CIERRAREGALO
                | HACE ABREREGALO juguetes CIERRAREGALO REVISA ABRECUENTO controldejuguete CIERRECUENTO FINREGALO;

parametrosdeenvoltura ::= jugueteasignacion FINREGALO controldejuguete FINREGALO juguetesunarios;
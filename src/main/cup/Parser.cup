package com.compi;

import java_cup.runtime.*;
import java.io.*;
import java.util.*;
import java.lang.Math;

/**
 * Clase principal del compilador
 */
class Parser;

/* Terminales */

// Operadores aritméticos binarios
terminal RUDOLPH; // +
terminal  DASHER; // -
terminal  DANCER; // /
terminal  PRANCER; // // (division entera)
terminal  VIXEN; // *
terminal  COMET; // ~
terminal CUPID; // **
// Operadores aritméticos unarios
terminal  GRINCH; // ++
terminal  QUIEN; // --
// Operadores relacionales
terminal  HERMEY; // <
terminal  BUDDY; // =<
terminal  JINGLE; // >
terminal JANGLE; // >=
terminal  PEPPERMINT; // ==
terminal  WUNORSE; // !=
// Operadores lógicos
terminal  MELCHOR; // ^
terminal  GASPAR; // #
terminal BALTASAR; // !
terminal  LOCAL; // !

// Tipos
terminal String PERSONA; // identificador
terminal Integer SANTACLAUS; // int
terminal Double PERENOEL; // float
terminal Boolean FATHERCHRISTMAS; // boolean
terminal Character KRISKRINGLE; // char
terminal String DEDMOROZ; // string
terminal Integer[] PAPANOEL; // array
terminal Integer L_SANTACLAUS; // literal int
terminal Double L_PERENOEL; // literal float
terminal Boolean L_FATHERCHRISTMAS; // literal boolean
terminal Character L_KRISKRINGLE; // literal char
terminal String L_DEDMOROZ; // literal string
terminal Integer[] L_PAPANOEL; // literal array

// Parentesis
terminal Integer ABRECUENTO; // (
terminal Integer CIERRECUENTO; // )
terminal Integer ABREEMPAQUE; // [
terminal Integer CIERREEMPAQUE; // ]
terminal Integer ABREREGALO; // {
terminal Integer CIERRAREGALO; // }

// Estructuras de control
terminal Integer ELFO;//if
terminal Integer HADA;//else
terminal Integer DUENDE;//else
terminal Integer ENVUELVE;//for
terminal Integer HACE;//do
terminal Integer REVISA;//until
terminal Integer ENVIA;//return
terminal Integer CORTA;//break

// Entrada y salida
terminal Integer NARRA;//print
terminal Integer ESCUCHA;//read 

// Fin de expresión
terminal  FINREGALO; // |

// Lexema separador
terminal Integer COMA; //,

// Asignación
terminal Integer ENTREGA;//<=

// Comentarios
// son ignorados por el compilador

// Funciones
terminal Integer MAIN; //main
//terminal Integer REGALO; // definicion de funcion 
terminal Integer FUNCTION; // definicion de funcion 

//-------------------------------------------------------------------------------------- NO Terminales
non terminal navidad; // Símbolo inicial ✅
non terminal bolsanavidena; // produccion para funciones ✅
non terminal regalo; // produccion para expresiones
non terminal regaloprin; // produccion para expresiones aritméticas ✅
non terminal regalocomprado; // produccion para expresiones relacionales
non terminal regalomanual; // produccion para expresiones lógicas ✅
non terminal regalopersonalizado; // produccion para expresiones unarias ✅
non terminal regaloespecial; // produccion para expresiones de asignacion y ciclos✅
non terminal regaloscondicionales; // produccion para if-elif-else ✅
non terminal condicionregalo; // produccion para condicion ✅
non terminal bloqueregalado; // produccion para bloque ✅



//-------------------------------------------------------------------------------------- PRECEDENCIA
precedence left RUDOLPH, DASHER; // suma y resta
precedence left DANCER, PRANCER; // division y division entera
precedence left VIXEN, COMET; // multiplicacion y modulo
precedence left GRINCH, QUIEN; // incremento y decremento
precedence left HERMEY, BUDDY, JINGLE, JANGLE, PEPPERMINT, WUNORSE; // operadores relacionales
precedence left MELCHOR, GASPAR; // operadores lógicos
precedence left BALTASAR; // operador lógico not
precedence left ABRECUENTO, CIERRECUENTO; // parentesis
precedence left ABREEMPAQUE, CIERREEMPAQUE; // corchetes
precedence left ABREREGALO, CIERRAREGALO; // llaves
precedence left ELFO, HADA, DUENDE, ENVUELVE, HACE, REVISA, ENVIA, CORTA; // estructuras de control
precedence left NARRA, ESCUCHA; // entrada y salida
precedence left FINREGALO; // fin de expresión
precedence left COMA; // lexema separador
precedence left ENTREGA; // asignacion
precedence left MAIN; // main
precedence left FUNCTION; // definicion de funcion

//-------------------------------------------------------------------------------------- PRODUCCIONES
/* Símbolo inicial y producciones gramaticales*/
start with navidad;

/* Producciones gramaticales */

navidad ::= bolsanavidena;

bolsanavidena ::= regalo regaloprincipal
               | bolsanavidena regalo regaloprincipal;

regaloprincipal ::= FUNCTION SANTACLAUS MAIN ABRECUENTO  CIERRECUENTO ABREREGALO
                        juguetes
                        garantia
                    CIERRAREGALO;

//Funciones
regalo ::= FUNCTION tiposregalo PERSONA ABRECUENTO CIERRECUENTO ABREREGALO
                juguetes
                garantia
           CIERRAREGALO
        | FUNCTION tiposregalo PERSONA ABRECUENTO monnos CIERRECUENTO ABREREGALO
                juguetes
                garantia
          CIERRAREGALO;

garantia ::= ENVIA L_SANTACLAUS FINREGALO
        | ENVIA L_PERENOEL FINREGALO
        | ENVIA L_FATHERCHRISTMAS FINREGALO
        | ENVIA L_KRISKRINGLE FINREGALO
        | ENVIA L_DEDMOROZ FINREGALO
        | ENVIA L_PAPANOEL FINREGALO;

tiposregalo ::= SANTACLAUS // int
            | PERENOEL // float
            | FATHERCHRISTMAS // boolean
            | KRISKRINGLE // char
            | DEDMOROZ // string
            | PAPANOEL; // array

// Parámetros de la función
monnos ::= tiposmonnos | tiposmonnos COMA monnos;

// tiposmonnos son los diferentes tipos de parámetros de la función
tiposmonnos ::= SANTACLAUS PERSONA // int identificador
            | PERENOEL PERSONA // float identificador
            | FATHERCHRISTMAS PERSONA // boolean identificador
            | KRISKRINGLE PERSONA // char identificador
            | DEDMOROZ PERSONA // string identificador
            | PAPANOEL PERSONA; // array identificador

//⚠️pendiente
envolturas ::= ABRECUENTO juguetes CIERRECUENTO // (expr)
         | ABREEMPAQUE juguetes CIERREEMPAQUE // [expr]
         | ABREREGALO codigo CIERRAREGALO // {expr}
         | ABRECUENTO CIERRECUENTO // ()
         | ABREEMPAQUE CIERREEMPAQUE // []
         | ABREREGALO CIERRAREGALO; // {}

juguetes ::= tipojuguetes FINREGALO | tipojuguetes FINREGALO juguetes;

tipojuguetes ::= juguetesaritmeticos // aritméticas (sumas, restas, etc)✅
         | juguetesrelacionales // expresiones relacionales (menor, mayor, etc) 
         | jugueteslogicos // expresiones lógicas (and, or, etc) 
         | juguetesunarios // expresiones unarias (incremento, decremento, etc)
         | jugueteasignacion // expresiones de asignacion y ciclos
         | juguetesdecontrol; // producción para if-elif-else recursivo

// aritméticas (sumas, restas, etc)
juguetesaritmeticos ::= piezasenteras | piezasflotantes;

piezasenteras ::= piezasenteras RUDOLPH piezasenteras // +
                     |  piezasenteras DASHER piezasenteras // -
                     |  piezasenteras DANCER piezasenteras // /
                     |  piezasenteras PRANCER piezasenteras // //
                     |  piezasenteras VIXEN piezasenteras // *
                     |  piezasenteras COMET piezasenteras // ~
                     |  piezasenteras CUPID piezasenteras // **
                     |  L_SANTACLAUS;

piezasflotantes ::= piezasflotantes RUDOLPH piezasflotantes // +
                     |  piezasflotantes DASHER piezasflotantes // -
                     |  piezasflotantes DANCER piezasflotantes // /
                     |  piezasflotantes PRANCER piezasflotantes // //
                     |  piezasflotantes VIXEN piezasflotantes // *
                     |  piezasflotantes COMET piezasflotantes // ~
                     |  piezasflotantes CUPID piezasflotantes // **
                     |  L_PERENOEL;

// relacionales (menor, mayor, etc)

// lógicos (and, or, etc)
jugueteslogicos ::= jugueteslogicos MELCHOR jugueteslogicos // AND
        | jugueteslogicos GASPAR jugueteslogicos // OR
        | BALTASAR jugueteslogicos // NOT
        | ABRECUENTO jugueteslogicos CIERRECUENTO; // (expr)

// unarios (incremento, decremento, etc)

// asignacion <=
jugueteasignacion ::= LOCAL SANTACLAUS PERSONA ENTREGA piezasenteras // enteros
        | LOCAL PERENOEL PERSONA ENTREGA piezasflotantes // flotantes
        | LOCAL FATHERCHRISTMAS PERSONA ENTREGA jugueteslogicos // booleanos
        | LOCAL KRISKRINGLE PERSONA ENTREGA L_KRISKRINGLE // caracteres
        | LOCAL DEDMOROZ PERSONA ENTREGA L_DEDMOROZ // strings ⚠️ valorar utilizar produccion de strings
        | LOCAL PAPANOEL PERSONA ENTREGA ABREEMPAQUE arreglosarreglados CIERREEMPAQUE;

arreglosarreglados ::= piezaarregloentero
        | piezaarregloflotante
        | piezaarreglobooleano
        | piezaarreglochar
        | piezaarreglostring
        | piezaarregloarreglo;

piezaarregloentero ::= piezasenteras | piezasenteras COMA piezaarregloentero;
piezaarregloflotante ::= piezasflotantes | piezasflotantes COMA piezaarregloflotante;
piezaarreglobooleano ::= jugueteslogicos | jugueteslogicos COMA piezaarreglobooleano;
piezaarreglochar ::= L_KRISKRINGLE | L_KRISKRINGLE COMA piezaarreglochar;
piezaarreglostring ::= L_DEDMOROZ | L_DEDMOROZ COMA piezaarreglostring;
piezaarregloarreglo ::= ABREEMPAQUE arreglosarreglados CIERREEMPAQUE
        | ABREEMPAQUE arreglosarreglados CIERREEMPAQUE COMA piezaarregloarreglo;


// estructuras de control

//______________________________________________________
regalo ::= regaloprin // aritméticas (sumas, restas, etc)✅
         | regalocomprado // expresiones relacionales (menor, mayor, etc) ✅
         | regalomanual // expresiones lógicas (and, or, etc) ✅
         | regalopersonalizado // expresiones unarias (incremento, decremento, etc)✅
         | regaloespecial // expresiones de asignacion y ciclos✅
         | regaloscondicionales // producción para if-elif-else recursivo
         | MAIN regalo
         | FUNCTION regalo
         | PERSONA regalo
         | SANTACLAUS regalo
         | PERENOEL regalo
         | FATHERCHRISTMAS regalo
         | KRISKRINGLE regalo
         | DEDMOROZ regalo
         | PAPANOEL regalo
         | L_SANTACLAUS regalo
         | L_PERENOEL regalo
         | L_FATHERCHRISTMAS regalo
         | L_KRISKRINGLE regalo
         | L_DEDMOROZ regalo
         | L_PAPANOEL regalo
         | regalo FINREGALO // | (fin de expresión)
         | ENVIA regalo; // return expr

// aritméticas (sumas, restas, etc)
regaloprin ::= RUDOLPH regalo // +
            | DASHER regalo // -
            | DANCER regalo // /
            | PRANCER regalo // //
            | VIXEN regalo // *
            | COMET regalo // ~
            | CUPID regalo; // **

// expresiones relacionales (menor, mayor, etc)
regalocomprado ::= regalo HERMEY regalo // <
              | regalo BUDDY regalo // =<
              | regalo JINGLE regalo // >
              | regalo JANGLE regalo // >=
              | regalo PEPPERMINT regalo // ==
              | regalo WUNORSE regalo; // !=

// expresiones lógicas (and, or, etc)
regalomanual ::= regalo MELCHOR regalo // expr ^ expr
              | regalo GASPAR regalo // expr # expr
              | BALTASAR regalo; // !expr

// expresiones unarias (incremento, decremento, etc)
regalopersonalizado ::= GRINCH regalo // ++
                    | QUIEN regalo; // --


regaloespecial ::= NARRA regalo // print expr
               | ESCUCHA regalo // read expr
               | regalo COMA regalo // expr, expr
               | LOCAL PERSONA ENTREGA regalo // local identificador <= expr
               | HACE bloqueregalado REVISA condicionregalo FINREGALO// do bloque while condicion
               | ENVUELVE condicionregalo bloqueregalado // for condicion bloque
               | CORTA regalo; // break

// if-elif-else
regaloscondicionales ::= ELFO condicionregalo bloqueregalado // if condicion bloque
                | regaloscondicionales HADA condicionregalo bloqueregalado // elif condicion bloque
                | regaloscondicionales DUENDE bloqueregalado; // else bloque

condicionregalo ::= ABRECUENTO L_FATHERCHRISTMAS CIERRECUENTO;
bloqueregalado ::= ABREREGALO regalo CIERRAREGALO;

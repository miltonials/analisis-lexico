
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.compi;

import java_cup.runtime.*;
import java.io.*;
import java.util.*;
import java.lang.Math;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\170\000\002\002\004\000\002\002\003\000\002\003" +
    "\004\000\002\003\005\000\002\015\013\000\002\004\013" +
    "\000\002\004\014\000\002\020\005\000\002\020\005\000" +
    "\002\020\005\000\002\020\005\000\002\020\005\000\002" +
    "\020\005\000\002\021\003\000\002\021\003\000\002\021" +
    "\003\000\002\021\003\000\002\021\003\000\002\021\003" +
    "\000\002\022\003\000\002\022\005\000\002\023\004\000" +
    "\002\023\004\000\002\023\004\000\002\023\004\000\002" +
    "\023\004\000\002\023\004\000\002\024\005\000\002\024" +
    "\005\000\002\024\005\000\002\024\004\000\002\024\004" +
    "\000\002\024\004\000\002\016\004\000\002\016\005\000" +
    "\002\017\003\000\002\017\003\000\002\017\003\000\002" +
    "\017\003\000\002\017\003\000\002\017\003\000\002\025" +
    "\003\000\002\025\003\000\002\026\005\000\002\026\005" +
    "\000\002\026\005\000\002\026\005\000\002\026\005\000" +
    "\002\026\005\000\002\026\005\000\002\026\003\000\002" +
    "\027\005\000\002\027\005\000\002\027\005\000\002\027" +
    "\005\000\002\027\005\000\002\027\005\000\002\027\005" +
    "\000\002\027\003\000\002\031\005\000\002\031\005\000" +
    "\002\031\004\000\002\031\003\000\002\032\005\000\002" +
    "\032\005\000\002\032\005\000\002\032\005\000\002\004" +
    "\003\000\002\004\003\000\002\004\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\004\004\000" +
    "\002\004\004\000\002\004\004\000\002\004\004\000\002" +
    "\004\004\000\002\004\004\000\002\004\004\000\002\004" +
    "\004\000\002\004\004\000\002\004\004\000\002\004\004" +
    "\000\002\004\004\000\002\004\004\000\002\004\004\000" +
    "\002\004\004\000\002\004\004\000\002\004\004\000\002" +
    "\005\004\000\002\005\004\000\002\005\004\000\002\005" +
    "\004\000\002\005\004\000\002\005\004\000\002\005\004" +
    "\000\002\006\005\000\002\006\005\000\002\006\005\000" +
    "\002\006\005\000\002\006\005\000\002\006\005\000\002" +
    "\007\005\000\002\007\005\000\002\007\004\000\002\010" +
    "\004\000\002\010\004\000\002\011\004\000\002\011\004" +
    "\000\002\011\005\000\002\011\006\000\002\011\007\000" +
    "\002\011\005\000\002\011\004\000\002\012\005\000\002" +
    "\012\006\000\002\012\005\000\002\013\005\000\002\014" +
    "\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\350\000\104\004\011\005\032\006\010\007\031\010" +
    "\052\011\042\012\041\013\022\014\053\025\026\026\047" +
    "\027\007\030\025\031\015\032\050\033\006\034\037\035" +
    "\021\036\054\037\034\040\005\041\033\042\055\043\040" +
    "\052\046\055\020\056\017\060\035\061\023\062\014\063" +
    "\030\067\016\070\004\001\002\000\104\004\011\005\032" +
    "\006\010\007\031\010\052\011\042\012\041\013\022\014" +
    "\053\025\026\026\047\027\007\030\312\031\310\032\315" +
    "\033\307\034\313\035\311\036\054\037\034\040\005\041" +
    "\033\042\055\043\040\052\046\055\020\056\017\060\035" +
    "\061\023\062\014\063\030\067\016\070\004\001\002\000" +
    "\104\004\011\005\032\006\010\007\031\010\052\011\042" +
    "\012\041\013\022\014\053\025\026\026\047\027\007\030" +
    "\025\031\015\032\050\033\006\034\037\035\021\036\054" +
    "\037\034\040\005\041\033\042\055\043\040\052\046\055" +
    "\020\056\017\060\035\061\023\062\014\063\030\067\016" +
    "\070\004\001\002\000\104\004\011\005\032\006\010\007" +
    "\031\010\052\011\042\012\041\013\022\014\053\025\026" +
    "\026\047\027\007\030\025\031\015\032\050\033\006\034" +
    "\037\035\021\036\054\037\034\040\005\041\033\042\055" +
    "\043\040\052\046\055\020\056\017\060\035\061\023\062" +
    "\014\063\030\067\016\070\004\001\002\000\104\004\011" +
    "\005\032\006\010\007\031\010\052\011\042\012\041\013" +
    "\022\014\053\025\026\026\047\027\007\030\025\031\015" +
    "\032\050\033\006\034\037\035\021\036\054\037\034\040" +
    "\005\041\033\042\055\043\040\052\046\055\020\056\017" +
    "\060\035\061\023\062\014\063\030\067\016\070\004\001" +
    "\002\000\104\004\011\005\032\006\010\007\031\010\052" +
    "\011\042\012\041\013\022\014\053\025\026\026\047\027" +
    "\007\030\025\031\015\032\050\033\006\034\037\035\021" +
    "\036\054\037\034\040\005\041\033\042\055\043\040\052" +
    "\046\055\020\056\017\060\035\061\023\062\014\063\030" +
    "\067\016\070\004\001\002\000\104\004\011\005\032\006" +
    "\010\007\031\010\052\011\042\012\041\013\022\014\053" +
    "\025\026\026\047\027\007\030\025\031\015\032\050\033" +
    "\006\034\037\035\021\036\054\037\034\040\005\041\033" +
    "\042\055\043\040\052\046\055\020\056\017\060\035\061" +
    "\023\062\014\063\030\067\016\070\004\001\002\000\032" +
    "\015\uffbb\016\uffbb\017\uffbb\020\uffbb\021\uffbb\022\uffbb\023" +
    "\uffbb\024\uffbb\051\uffbb\064\uffbb\065\uffbb\070\uffbb\001\002" +
    "\000\106\002\000\004\011\005\032\006\010\007\031\010" +
    "\052\011\042\012\041\013\022\014\053\025\026\026\047" +
    "\027\007\030\025\031\015\032\050\033\006\034\037\035" +
    "\021\036\054\037\034\040\005\041\033\042\055\043\040" +
    "\052\046\055\020\056\017\060\035\061\023\062\014\063" +
    "\030\067\016\070\004\001\002\000\104\004\011\005\032" +
    "\006\010\007\031\010\052\011\042\012\041\013\022\014" +
    "\053\025\026\026\047\027\007\030\025\031\015\032\050" +
    "\033\006\034\037\035\021\036\054\037\034\040\005\041" +
    "\033\042\055\043\040\052\046\055\020\056\017\060\035" +
    "\061\023\062\014\063\030\067\016\070\004\001\002\000" +
    "\104\004\011\005\032\006\010\007\031\010\052\011\042" +
    "\012\041\013\022\014\053\025\026\026\047\027\007\030" +
    "\025\031\015\032\050\033\006\034\037\035\021\036\054" +
    "\037\034\040\005\041\033\042\055\043\040\052\046\055" +
    "\020\056\017\060\035\061\023\062\014\063\030\067\016" +
    "\070\004\001\002\000\104\004\011\005\032\006\010\007" +
    "\031\010\052\011\042\012\041\013\022\014\053\025\026" +
    "\026\047\027\007\030\025\031\015\032\050\033\006\034" +
    "\037\035\021\036\054\037\034\040\005\041\033\042\055" +
    "\043\040\052\046\055\020\056\017\060\035\061\023\062" +
    "\014\063\030\067\016\070\004\001\002\000\004\050\116" +
    "\001\002\000\004\044\112\001\002\000\104\004\011\005" +
    "\032\006\010\007\031\010\052\011\042\012\041\013\022" +
    "\014\053\025\026\026\047\027\007\030\025\031\015\032" +
    "\050\033\006\034\037\035\021\036\054\037\034\040\005" +
    "\041\033\042\055\043\040\052\046\055\020\056\017\060" +
    "\035\061\023\062\014\063\030\067\016\070\004\001\002" +
    "\000\104\004\011\005\032\006\010\007\031\010\052\011" +
    "\042\012\041\013\022\014\053\025\026\026\047\027\007" +
    "\030\025\031\015\032\050\033\006\034\037\035\021\036" +
    "\054\037\034\040\005\041\033\042\055\043\040\052\046" +
    "\055\020\056\017\060\035\061\023\062\014\063\030\067" +
    "\016\070\004\001\002\000\104\004\011\005\032\006\010" +
    "\007\031\010\052\011\042\012\041\013\022\014\053\025" +
    "\026\026\047\027\007\030\025\031\015\032\050\033\006" +
    "\034\037\035\021\036\054\037\034\040\005\041\033\042" +
    "\055\043\040\052\046\055\020\056\017\060\035\061\023" +
    "\062\014\063\030\067\016\070\004\001\002\000\032\015" +
    "\uffbc\016\uffbc\017\uffbc\020\uffbc\021\uffbc\022\uffbc\023\uffbc" +
    "\024\uffbc\051\uffbc\064\uffbc\065\uffbc\070\uffbc\001\002\000" +
    "\104\004\011\005\032\006\010\007\031\010\052\011\042" +
    "\012\041\013\022\014\053\025\026\026\047\027\007\030" +
    "\025\031\015\032\050\033\006\034\037\035\021\036\054" +
    "\037\034\040\005\041\033\042\055\043\040\052\046\055" +
    "\020\056\017\060\035\061\023\062\014\063\030\067\016" +
    "\070\004\001\002\000\104\004\011\005\032\006\010\007" +
    "\031\010\052\011\042\012\041\013\022\014\053\025\026" +
    "\026\047\027\007\030\025\031\015\032\050\033\006\034" +
    "\037\035\021\036\054\037\034\040\005\041\033\042\055" +
    "\043\040\052\046\055\020\056\017\060\035\061\023\062" +
    "\014\063\030\067\016\070\004\001\002\000\032\015\uffba" +
    "\016\uffba\017\uffba\020\uffba\021\uffba\022\uffba\023\uffba\024" +
    "\uffba\051\uffba\064\uffba\065\uffba\070\uffba\001\002\000\104" +
    "\004\011\005\032\006\010\007\031\010\052\011\042\012" +
    "\041\013\022\014\053\025\026\026\047\027\007\030\025" +
    "\031\015\032\050\033\006\034\037\035\021\036\054\037" +
    "\034\040\005\041\033\042\055\043\040\052\046\055\020" +
    "\056\017\060\035\061\023\062\014\063\030\067\016\070" +
    "\004\001\002\000\104\004\011\005\032\006\010\007\031" +
    "\010\052\011\042\012\041\013\022\014\053\025\026\026" +
    "\047\027\007\030\025\031\015\032\050\033\006\034\037" +
    "\035\021\036\054\037\034\040\005\041\033\042\055\043" +
    "\040\052\046\055\020\056\017\060\035\061\023\062\014" +
    "\063\030\067\016\070\004\001\002\000\104\004\011\005" +
    "\032\006\010\007\031\010\052\011\042\012\041\013\022" +
    "\014\053\025\026\026\047\027\007\030\025\031\015\032" +
    "\050\033\006\034\037\035\021\036\054\037\034\040\005" +
    "\041\033\042\055\043\040\052\046\055\020\056\017\060" +
    "\035\061\023\062\014\063\030\067\016\070\004\001\002" +
    "\000\104\004\011\005\032\006\010\007\031\010\052\011" +
    "\042\012\041\013\022\014\053\025\026\026\047\027\007" +
    "\030\025\031\015\032\050\033\006\034\037\035\021\036" +
    "\054\037\034\040\005\041\033\042\055\043\040\052\046" +
    "\055\020\056\017\060\035\061\023\062\014\063\030\067" +
    "\016\070\004\001\002\000\104\004\011\005\032\006\010" +
    "\007\031\010\052\011\042\012\041\013\022\014\053\025" +
    "\026\026\047\027\007\030\025\031\015\032\050\033\006" +
    "\034\037\035\021\036\054\037\034\040\005\041\033\042" +
    "\055\043\040\052\046\055\020\056\017\060\035\061\023" +
    "\062\014\063\030\067\016\070\004\001\002\000\104\004" +
    "\011\005\032\006\010\007\031\010\052\011\042\012\041" +
    "\013\022\014\053\025\026\026\047\027\007\030\025\031" +
    "\015\032\050\033\006\034\037\035\021\036\054\037\034" +
    "\040\005\041\033\042\055\043\040\052\046\055\020\056" +
    "\017\060\035\061\023\062\014\063\030\067\016\070\004" +
    "\001\002\000\032\015\uffbe\016\uffbe\017\uffbe\020\uffbe\021" +
    "\uffbe\022\uffbe\023\uffbe\024\uffbe\051\uffbe\064\uffbe\065\uffbe" +
    "\070\uffbe\001\002\000\104\004\011\005\032\006\010\007" +
    "\031\010\052\011\042\012\041\013\022\014\053\025\026" +
    "\026\047\027\007\030\025\031\015\032\050\033\006\034" +
    "\037\035\021\036\054\037\034\040\005\041\033\042\055" +
    "\043\040\052\046\055\020\056\017\060\035\061\023\062" +
    "\014\063\030\067\016\070\004\001\002\000\104\004\011" +
    "\005\032\006\010\007\031\010\052\011\042\012\041\013" +
    "\022\014\053\025\026\026\047\027\007\030\025\031\015" +
    "\032\050\033\006\034\037\035\021\036\054\037\034\040" +
    "\005\041\033\042\055\043\040\052\046\055\020\056\017" +
    "\060\035\061\023\062\014\063\030\067\016\070\004\001" +
    "\002\000\104\004\011\005\032\006\010\007\031\010\052" +
    "\011\042\012\041\013\022\014\053\025\026\026\047\027" +
    "\007\030\025\031\015\032\050\033\006\034\037\035\021" +
    "\036\054\037\034\040\005\041\033\042\055\043\040\052" +
    "\046\055\020\056\017\060\035\061\023\062\014\063\030" +
    "\067\016\070\004\001\002\000\104\004\011\005\032\006" +
    "\010\007\031\010\052\011\042\012\041\013\022\014\053" +
    "\025\026\026\047\027\007\030\025\031\015\032\050\033" +
    "\006\034\037\035\021\036\054\037\034\040\005\041\033" +
    "\042\055\043\040\052\046\055\020\056\017\060\035\061" +
    "\023\062\014\063\030\067\016\070\004\001\002\000\036" +
    "\015\uffb9\016\uffb9\017\uffb9\020\uffb9\021\uffb9\022\uffb9\023" +
    "\uffb9\024\uffb9\051\uffb9\053\244\054\243\064\uffb9\065\uffb9" +
    "\070\uffb9\001\002\000\030\015\064\016\062\017\057\020" +
    "\067\021\066\022\070\023\063\024\065\064\061\065\060" +
    "\070\122\001\002\000\004\002\121\001\002\000\004\044" +
    "\112\001\002\000\004\027\106\001\002\000\104\004\011" +
    "\005\032\006\010\007\031\010\052\011\042\012\041\013" +
    "\022\014\053\025\026\026\047\027\007\030\025\031\015" +
    "\032\050\033\006\034\037\035\021\036\054\037\034\040" +
    "\005\041\033\042\055\043\040\052\046\055\020\056\017" +
    "\060\035\061\023\062\014\063\030\067\016\070\004\001" +
    "\002\000\032\015\uffbd\016\uffbd\017\uffbd\020\uffbd\021\uffbd" +
    "\022\uffbd\023\uffbd\024\uffbd\051\uffbd\064\uffbd\065\uffbd\070" +
    "\uffbd\001\002\000\104\004\011\005\032\006\010\007\031" +
    "\010\052\011\042\012\041\013\022\014\053\025\026\026" +
    "\047\027\007\030\025\031\015\032\050\033\006\034\037" +
    "\035\021\036\054\037\034\040\005\041\033\042\055\043" +
    "\040\052\046\055\020\056\017\060\035\061\023\062\014" +
    "\063\030\067\016\070\004\001\002\000\104\004\011\005" +
    "\032\006\010\007\031\010\052\011\042\012\041\013\022" +
    "\014\053\025\026\026\047\027\007\030\025\031\015\032" +
    "\050\033\006\034\037\035\021\036\054\037\034\040\005" +
    "\041\033\042\055\043\040\052\046\055\020\056\017\060" +
    "\035\061\023\062\014\063\030\067\016\070\004\001\002" +
    "\000\104\004\011\005\032\006\010\007\031\010\052\011" +
    "\042\012\041\013\022\014\053\025\026\026\047\027\007" +
    "\030\025\031\015\032\050\033\006\034\037\035\021\036" +
    "\054\037\034\040\005\041\033\042\055\043\040\052\046" +
    "\055\020\056\017\060\035\061\023\062\014\063\030\067" +
    "\016\070\004\001\002\000\104\004\011\005\032\006\010" +
    "\007\031\010\052\011\042\012\041\013\022\014\053\025" +
    "\026\026\047\027\007\030\025\031\015\032\050\033\006" +
    "\034\037\035\021\036\054\037\034\040\005\041\033\042" +
    "\055\043\040\052\046\055\020\056\017\060\035\061\023" +
    "\062\014\063\030\067\016\070\004\001\002\000\032\015" +
    "\uffab\016\uffab\017\uffab\020\uffab\021\uffab\022\uffab\023\uffab" +
    "\024\uffab\051\uffab\064\uffab\065\uffab\070\uffab\001\002\000" +
    "\104\004\011\005\032\006\010\007\031\010\052\011\042" +
    "\012\041\013\022\014\053\025\026\026\047\027\007\030" +
    "\025\031\015\032\050\033\006\034\037\035\021\036\054" +
    "\037\034\040\005\041\033\042\055\043\040\052\046\055" +
    "\020\056\017\060\035\061\023\062\014\063\030\067\016" +
    "\070\004\001\002\000\104\004\011\005\032\006\010\007" +
    "\031\010\052\011\042\012\041\013\022\014\053\025\026" +
    "\026\047\027\007\030\025\031\015\032\050\033\006\034" +
    "\037\035\021\036\054\037\034\040\005\041\033\042\055" +
    "\043\040\052\046\055\020\056\017\060\035\061\023\062" +
    "\014\063\030\067\016\070\004\001\002\000\032\015\uffa9" +
    "\016\uffa9\017\uffa9\020\uffa9\021\uffa9\022\uffa9\023\uffa9\024" +
    "\uffa9\051\uffa9\064\uffa9\065\uffa9\070\uffa9\001\002\000\104" +
    "\004\011\005\032\006\010\007\031\010\052\011\042\012" +
    "\041\013\022\014\053\025\026\026\047\027\007\030\025" +
    "\031\015\032\050\033\006\034\037\035\021\036\054\037" +
    "\034\040\005\041\033\042\055\043\040\052\046\055\020" +
    "\056\017\060\035\061\023\062\014\063\030\067\016\070" +
    "\004\001\002\000\104\004\011\005\032\006\010\007\031" +
    "\010\052\011\042\012\041\013\022\014\053\025\026\026" +
    "\047\027\007\030\025\031\015\032\050\033\006\034\037" +
    "\035\021\036\054\037\034\040\005\041\033\042\055\043" +
    "\040\052\046\055\020\056\017\060\035\061\023\062\014" +
    "\063\030\067\016\070\004\001\002\000\104\004\011\005" +
    "\032\006\010\007\031\010\052\011\042\012\041\013\022" +
    "\014\053\025\026\026\047\027\007\030\025\031\015\032" +
    "\050\033\006\034\037\035\021\036\054\037\034\040\005" +
    "\041\033\042\055\043\040\052\046\055\020\056\017\060" +
    "\035\061\023\062\014\063\030\067\016\070\004\001\002" +
    "\000\104\004\011\005\032\006\010\007\031\010\052\011" +
    "\042\012\041\013\022\014\053\025\026\026\047\027\007" +
    "\030\025\031\015\032\050\033\006\034\037\035\021\036" +
    "\054\037\034\040\005\041\033\042\055\043\040\052\046" +
    "\055\020\056\017\060\035\061\023\062\014\063\030\067" +
    "\016\070\004\001\002\000\104\004\011\005\032\006\010" +
    "\007\031\010\052\011\042\012\041\013\022\014\053\025" +
    "\026\026\047\027\007\030\025\031\015\032\050\033\006" +
    "\034\037\035\021\036\054\037\034\040\005\041\033\042" +
    "\055\043\040\052\046\055\020\056\017\060\035\061\023" +
    "\062\014\063\030\067\016\070\004\001\002\000\104\004" +
    "\011\005\032\006\010\007\031\010\052\011\042\012\041" +
    "\013\022\014\053\025\026\026\047\027\007\030\025\031" +
    "\015\032\050\033\006\034\037\035\021\036\054\037\034" +
    "\040\005\041\033\042\055\043\040\052\046\055\020\056" +
    "\017\060\035\061\023\062\014\063\030\067\016\070\004" +
    "\001\002\000\104\004\011\005\032\006\010\007\031\010" +
    "\052\011\042\012\041\013\022\014\053\025\026\026\047" +
    "\027\007\030\025\031\015\032\050\033\006\034\037\035" +
    "\021\036\054\037\034\040\005\041\033\042\055\043\040" +
    "\052\046\055\020\056\017\060\035\061\023\062\014\063" +
    "\030\067\016\070\004\001\002\000\032\015\uff9b\016\uff9b" +
    "\017\uff9b\020\uff9b\021\uff9b\022\uff9b\023\063\024\065\051" +
    "\uff9b\064\061\065\060\070\uff9b\001\002\000\032\015\uff9d" +
    "\016\uff9d\017\uff9d\020\uff9d\021\uff9d\022\uff9d\023\063\024" +
    "\065\051\uff9d\064\061\065\060\070\uff9d\001\002\000\032" +
    "\015\uff9c\016\uff9c\017\uff9c\020\uff9c\021\uff9c\022\uff9c\023" +
    "\063\024\065\051\uff9c\064\061\065\060\070\uff9c\001\002" +
    "\000\032\015\uff99\016\uff99\017\uff99\020\uff99\021\uff99\022" +
    "\uff99\023\uff99\024\uff99\051\uff99\064\061\065\060\070\uff99" +
    "\001\002\000\032\015\uffa0\016\uffa0\017\uffa0\020\uffa0\021" +
    "\uffa0\022\uffa0\023\063\024\065\051\uffa0\064\061\065\060" +
    "\070\uffa0\001\002\000\032\015\uff9a\016\uff9a\017\uff9a\020" +
    "\uff9a\021\uff9a\022\uff9a\023\uff9a\024\uff9a\051\uff9a\064\061" +
    "\065\060\070\uff9a\001\002\000\032\015\uff9f\016\uff9f\017" +
    "\uff9f\020\uff9f\021\uff9f\022\uff9f\023\063\024\065\051\uff9f" +
    "\064\061\065\060\070\uff9f\001\002\000\032\015\uff93\016" +
    "\uff93\017\uff93\020\uff93\021\uff93\022\uff93\023\uff93\024\uff93" +
    "\051\uff93\064\uff93\065\uff93\070\uff93\001\002\000\032\015" +
    "\uff9e\016\uff9e\017\uff9e\020\uff9e\021\uff9e\022\uff9e\023\063" +
    "\024\065\051\uff9e\064\061\065\060\070\uff9e\001\002\000" +
    "\032\015\uffaf\016\uffaf\017\uffaf\020\uffaf\021\uffaf\022\uffaf" +
    "\023\uffaf\024\uffaf\051\uffaf\064\uffaf\065\uffaf\070\uffaf\001" +
    "\002\000\032\015\064\016\062\017\057\020\067\021\066" +
    "\022\070\023\063\024\065\051\uff96\064\061\065\060\070" +
    "\uff96\001\002\000\032\015\064\016\062\017\057\020\067" +
    "\021\066\022\070\023\063\024\065\051\uffa3\064\061\065" +
    "\060\070\uffa3\001\002\000\032\015\uffb3\016\uffb3\017\uffb3" +
    "\020\uffb3\021\uffb3\022\uffb3\023\uffb3\024\uffb3\051\uffb3\064" +
    "\uffb3\065\uffb3\070\uffb3\001\002\000\004\066\107\001\002" +
    "\000\104\004\011\005\032\006\010\007\031\010\052\011" +
    "\042\012\041\013\022\014\053\025\026\026\047\027\007" +
    "\030\025\031\015\032\050\033\006\034\037\035\021\036" +
    "\054\037\034\040\005\041\033\042\055\043\040\052\046" +
    "\055\020\056\017\060\035\061\023\062\014\063\030\067" +
    "\016\070\004\001\002\000\032\015\uff92\016\uff92\017\uff92" +
    "\020\uff92\021\uff92\022\uff92\023\uff92\024\uff92\051\uff92\064" +
    "\uff92\065\uff92\070\uff92\001\002\000\004\050\116\001\002" +
    "\000\004\040\113\001\002\000\004\045\114\001\002\000" +
    "\006\050\uff8b\064\uff8b\001\002\000\036\015\uff8e\016\uff8e" +
    "\017\uff8e\020\uff8e\021\uff8e\022\uff8e\023\uff8e\024\uff8e\051" +
    "\uff8e\053\uff8e\054\uff8e\064\uff8e\065\uff8e\070\uff8e\001\002" +
    "\000\104\004\011\005\032\006\010\007\031\010\052\011" +
    "\042\012\041\013\022\014\053\025\026\026\047\027\007" +
    "\030\025\031\015\032\050\033\006\034\037\035\021\036" +
    "\054\037\034\040\005\041\033\042\055\043\040\052\046" +
    "\055\020\056\017\060\035\061\023\062\014\063\030\067" +
    "\016\070\004\001\002\000\030\015\064\016\062\017\057" +
    "\020\067\021\066\022\070\023\063\024\065\051\120\064" +
    "\061\065\060\001\002\000\040\015\uff8a\016\uff8a\017\uff8a" +
    "\020\uff8a\021\uff8a\022\uff8a\023\uff8a\024\uff8a\051\uff8a\053" +
    "\uff8a\054\uff8a\057\uff8a\064\uff8a\065\uff8a\070\uff8a\001\002" +
    "\000\004\002\001\001\002\000\004\030\124\001\002\000" +
    "\106\002\uffff\004\uffff\005\uffff\006\uffff\007\uffff\010\uffff" +
    "\011\uffff\012\uffff\013\uffff\014\uffff\025\uffff\026\uffff\027" +
    "\uffff\030\uffff\031\uffff\032\uffff\033\uffff\034\uffff\035\uffff" +
    "\036\uffff\037\uffff\040\uffff\041\uffff\042\uffff\043\uffff\052" +
    "\uffff\055\uffff\056\uffff\060\uffff\061\uffff\062\uffff\063\uffff" +
    "\067\uffff\070\uffff\001\002\000\004\067\125\001\002\000" +
    "\004\044\126\001\002\000\004\045\127\001\002\000\004" +
    "\050\130\001\002\000\016\013\146\014\131\025\133\036" +
    "\134\037\150\040\135\001\002\000\006\036\237\037\240" +
    "\001\002\000\004\064\uffde\001\002\000\006\025\133\040" +
    "\135\001\002\000\022\004\uffcf\005\uffcf\006\uffcf\007\uffcf" +
    "\010\uffcf\011\uffcf\012\uffcf\064\uffcf\001\002\000\010\023" +
    "\uffc3\024\uffc3\064\uffc3\001\002\000\004\064\uffdd\001\002" +
    "\000\004\066\217\001\002\000\004\064\uffda\001\002\000" +
    "\022\004\204\005\205\006\206\007\201\010\203\011\207" +
    "\012\202\064\uffd8\001\002\000\004\064\uffdb\001\002\000" +
    "\004\064\uffd9\001\002\000\004\064\177\001\002\000\022" +
    "\004\164\005\165\006\166\007\161\010\163\011\167\012" +
    "\162\064\uffd7\001\002\000\006\036\155\037\156\001\002" +
    "\000\010\023\151\024\152\064\uffdc\001\002\000\022\004" +
    "\uffc7\005\uffc7\006\uffc7\007\uffc7\010\uffc7\011\uffc7\012\uffc7" +
    "\064\uffc7\001\002\000\006\025\133\040\135\001\002\000" +
    "\006\025\133\040\135\001\002\000\010\023\uffc5\024\uffc5" +
    "\064\uffc5\001\002\000\010\023\uffc6\024\uffc6\064\uffc6\001" +
    "\002\000\004\064\160\001\002\000\004\064\157\001\002" +
    "\000\004\064\uffc0\001\002\000\004\064\uffc2\001\002\000" +
    "\004\037\150\001\002\000\004\037\150\001\002\000\004" +
    "\037\150\001\002\000\004\037\150\001\002\000\004\037" +
    "\150\001\002\000\004\037\150\001\002\000\004\037\150" +
    "\001\002\000\022\004\uffc9\005\uffc9\006\uffc9\007\uffc9\010" +
    "\uffc9\011\uffc9\012\162\064\uffc9\001\002\000\022\004\uffcc" +
    "\005\uffcc\006\uffcc\007\uffcc\010\163\011\167\012\162\064" +
    "\uffcc\001\002\000\022\004\uffcd\005\uffcd\006\166\007\161" +
    "\010\163\011\167\012\162\064\uffcd\001\002\000\022\004" +
    "\uffce\005\uffce\006\166\007\161\010\163\011\167\012\162" +
    "\064\uffce\001\002\000\022\004\uffca\005\uffca\006\uffca\007" +
    "\uffca\010\uffca\011\uffca\012\162\064\uffca\001\002\000\022" +
    "\004\uffc8\005\uffc8\006\uffc8\007\uffc8\010\uffc8\011\uffc8\012" +
    "\uffc8\064\uffc8\001\002\000\022\004\uffcb\005\uffcb\006\uffcb" +
    "\007\uffcb\010\163\011\167\012\162\064\uffcb\001\002\000" +
    "\020\013\146\014\131\025\133\036\134\037\150\040\135" +
    "\066\uffe0\001\002\000\004\066\uffdf\001\002\000\004\036" +
    "\134\001\002\000\004\036\134\001\002\000\004\036\134" +
    "\001\002\000\004\036\134\001\002\000\004\036\134\001" +
    "\002\000\004\036\134\001\002\000\004\036\134\001\002" +
    "\000\022\004\uffd1\005\uffd1\006\uffd1\007\uffd1\010\uffd1\011" +
    "\uffd1\012\202\064\uffd1\001\002\000\022\004\uffd4\005\uffd4" +
    "\006\uffd4\007\uffd4\010\203\011\207\012\202\064\uffd4\001" +
    "\002\000\022\004\uffd5\005\uffd5\006\206\007\201\010\203" +
    "\011\207\012\202\064\uffd5\001\002\000\022\004\uffd6\005" +
    "\uffd6\006\206\007\201\010\203\011\207\012\202\064\uffd6" +
    "\001\002\000\022\004\uffd2\005\uffd2\006\uffd2\007\uffd2\010" +
    "\uffd2\011\uffd2\012\202\064\uffd2\001\002\000\022\004\uffd0" +
    "\005\uffd0\006\uffd0\007\uffd0\010\uffd0\011\uffd0\012\uffd0\064" +
    "\uffd0\001\002\000\022\004\uffd3\005\uffd3\006\uffd3\007\uffd3" +
    "\010\203\011\207\012\202\064\uffd3\001\002\000\016\036" +
    "\223\037\225\040\222\041\226\042\227\043\224\001\002" +
    "\000\004\051\221\001\002\000\106\002\ufffd\004\ufffd\005" +
    "\ufffd\006\ufffd\007\ufffd\010\ufffd\011\ufffd\012\ufffd\013\ufffd" +
    "\014\ufffd\025\ufffd\026\ufffd\027\ufffd\030\ufffd\031\ufffd\032" +
    "\ufffd\033\ufffd\034\ufffd\035\ufffd\036\ufffd\037\ufffd\040\ufffd" +
    "\041\ufffd\042\ufffd\043\ufffd\052\ufffd\055\ufffd\056\ufffd\060" +
    "\ufffd\061\ufffd\062\ufffd\063\ufffd\067\ufffd\070\ufffd\001\002" +
    "\000\004\064\235\001\002\000\004\064\234\001\002\000" +
    "\004\064\233\001\002\000\004\064\232\001\002\000\004" +
    "\064\231\001\002\000\004\064\230\001\002\000\004\051" +
    "\ufff6\001\002\000\004\051\ufff7\001\002\000\004\051\ufff9" +
    "\001\002\000\004\051\ufff5\001\002\000\004\051\ufffa\001" +
    "\002\000\004\051\ufff8\001\002\000\010\023\uffc4\024\uffc4" +
    "\064\uffc4\001\002\000\004\064\242\001\002\000\004\064" +
    "\241\001\002\000\004\064\uffbf\001\002\000\004\064\uffc1" +
    "\001\002\000\004\050\116\001\002\000\004\044\112\001" +
    "\002\000\004\050\116\001\002\000\036\015\uff8d\016\uff8d" +
    "\017\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d\024\uff8d\051" +
    "\uff8d\053\uff8d\054\uff8d\064\uff8d\065\uff8d\070\uff8d\001\002" +
    "\000\036\015\uff8c\016\uff8c\017\uff8c\020\uff8c\021\uff8c\022" +
    "\uff8c\023\uff8c\024\uff8c\051\uff8c\053\uff8c\054\uff8c\064\uff8c" +
    "\065\uff8c\070\uff8c\001\002\000\032\015\064\016\062\017" +
    "\057\020\067\021\066\022\070\023\063\024\065\051\uffa2" +
    "\064\061\065\060\070\uffa2\001\002\000\032\015\064\016" +
    "\062\017\057\020\067\021\066\022\070\023\063\024\065" +
    "\051\uffa1\064\061\065\060\070\uffa1\001\002\000\032\015" +
    "\uffaa\016\uffaa\017\uffaa\020\uffaa\021\uffaa\022\uffaa\023\uffaa" +
    "\024\uffaa\051\uffaa\064\uffaa\065\uffaa\070\uffaa\001\002\000" +
    "\032\015\uffb1\016\uffb1\017\uffb1\020\uffb1\021\uffb1\022\uffb1" +
    "\023\uffb1\024\uffb1\051\uffb1\064\uffb1\065\uffb1\070\uffb1\001" +
    "\002\000\032\015\uffa8\016\uffa8\017\uffa8\020\uffa8\021\uffa8" +
    "\022\uffa8\023\uffa8\024\uffa8\051\uffa8\064\061\065\060\070" +
    "\uffa8\001\002\000\032\015\uffae\016\uffae\017\uffae\020\uffae" +
    "\021\uffae\022\uffae\023\uffae\024\uffae\051\uffae\064\uffae\065" +
    "\uffae\070\uffae\001\002\000\032\015\uffac\016\uffac\017\uffac" +
    "\020\uffac\021\uffac\022\uffac\023\uffac\024\uffac\051\uffac\064" +
    "\uffac\065\uffac\070\uffac\001\002\000\032\015\064\016\062" +
    "\017\057\020\067\021\066\022\070\023\063\024\065\051" +
    "\uffa6\064\061\065\060\070\uffa6\001\002\000\032\015\064" +
    "\016\062\017\057\020\067\021\066\022\070\023\063\024" +
    "\065\051\uffa4\064\061\065\060\070\uffa4\001\002\000\032" +
    "\015\uff94\016\uff94\017\uff94\020\uff94\021\uff94\022\uff94\023" +
    "\uff94\024\uff94\051\uff94\064\061\065\060\070\uff94\001\002" +
    "\000\032\015\uff98\016\uff98\017\uff98\020\uff98\021\uff98\022" +
    "\uff98\023\uff98\024\uff98\051\uff98\064\061\065\060\070\uff98" +
    "\001\002\000\032\015\uffb5\016\uffb5\017\uffb5\020\uffb5\021" +
    "\uffb5\022\uffb5\023\uffb5\024\uffb5\051\uffb5\064\uffb5\065\uffb5" +
    "\070\uffb5\001\002\000\032\015\uff8f\016\uff8f\017\uff8f\020" +
    "\uff8f\021\uff8f\022\uff8f\023\uff8f\024\uff8f\051\uff8f\064\061" +
    "\065\060\070\uff8f\001\002\000\032\015\064\016\062\017" +
    "\057\020\067\021\066\022\070\023\063\024\065\051\uff97" +
    "\064\061\065\060\070\uff97\001\002\000\032\015\uffb0\016" +
    "\uffb0\017\uffb0\020\uffb0\021\uffb0\022\uffb0\023\uffb0\024\uffb0" +
    "\051\uffb0\064\uffb0\065\uffb0\070\uffb0\001\002\000\004\050" +
    "\116\001\002\000\032\015\uff90\016\uff90\017\uff90\020\uff90" +
    "\021\uff90\022\uff90\023\uff90\024\uff90\051\uff90\064\uff90\065" +
    "\uff90\070\uff90\001\002\000\004\057\272\001\002\000\004" +
    "\044\112\001\002\000\004\064\274\001\002\000\032\015" +
    "\uff91\016\uff91\017\uff91\020\uff91\021\uff91\022\uff91\023\uff91" +
    "\024\uff91\051\uff91\064\uff91\065\uff91\070\uff91\001\002\000" +
    "\032\015\uffb8\016\uffb8\017\uffb8\020\uffb8\021\uffb8\022\uffb8" +
    "\023\uffb8\024\uffb8\051\uffb8\064\uffb8\065\uffb8\070\uffb8\001" +
    "\002\000\032\015\uffb4\016\uffb4\017\uffb4\020\uffb4\021\uffb4" +
    "\022\uffb4\023\uffb4\024\uffb4\051\uffb4\064\uffb4\065\uffb4\070" +
    "\uffb4\001\002\000\032\015\uff95\016\uff95\017\uff95\020\uff95" +
    "\021\uff95\022\uff95\023\uff95\024\uff95\051\uff95\064\061\065" +
    "\060\070\uff95\001\002\000\030\015\064\016\062\017\057" +
    "\020\067\021\066\022\070\023\063\024\065\064\061\065" +
    "\060\070\122\001\002\000\106\002\ufffe\004\ufffe\005\ufffe" +
    "\006\ufffe\007\ufffe\010\ufffe\011\ufffe\012\ufffe\013\ufffe\014" +
    "\ufffe\025\ufffe\026\ufffe\027\ufffe\030\ufffe\031\ufffe\032\ufffe" +
    "\033\ufffe\034\ufffe\035\ufffe\036\ufffe\037\ufffe\040\ufffe\041" +
    "\ufffe\042\ufffe\043\ufffe\052\ufffe\055\ufffe\056\ufffe\060\ufffe" +
    "\061\ufffe\062\ufffe\063\ufffe\067\ufffe\070\ufffe\001\002\000" +
    "\032\015\064\016\062\017\057\020\067\021\066\022\070" +
    "\023\063\024\065\051\uffa7\064\061\065\060\070\uffa7\001" +
    "\002\000\032\015\064\016\062\017\057\020\067\021\066" +
    "\022\070\023\063\024\065\051\uffa5\064\061\065\060\070" +
    "\uffa5\001\002\000\032\015\uffb6\016\uffb6\017\uffb6\020\uffb6" +
    "\021\uffb6\022\uffb6\023\uffb6\024\uffb6\051\uffb6\064\uffb6\065" +
    "\uffb6\070\uffb6\001\002\000\032\015\uffb2\016\uffb2\017\uffb2" +
    "\020\uffb2\021\uffb2\022\uffb2\023\uffb2\024\uffb2\051\uffb2\064" +
    "\uffb2\065\uffb2\070\uffb2\001\002\000\032\015\uffad\016\uffad" +
    "\017\uffad\020\uffad\021\uffad\022\uffad\023\uffad\024\uffad\051" +
    "\uffad\064\uffad\065\uffad\070\uffad\001\002\000\104\004\011" +
    "\005\032\006\010\007\031\010\052\011\042\012\041\013" +
    "\022\014\053\025\026\026\047\027\007\030\025\031\015" +
    "\032\050\033\006\034\037\035\021\036\054\037\034\040" +
    "\005\041\033\042\055\043\040\052\046\055\020\056\017" +
    "\060\035\061\023\062\014\063\030\067\016\070\004\001" +
    "\002\000\104\004\011\005\032\006\010\007\031\010\052" +
    "\011\042\012\041\013\022\014\053\025\026\026\047\027" +
    "\007\030\025\031\015\032\050\033\006\034\037\035\021" +
    "\036\054\037\034\040\005\041\033\042\055\043\040\052" +
    "\046\055\020\056\017\060\035\061\023\062\014\063\030" +
    "\067\016\070\004\001\002\000\104\004\011\005\032\006" +
    "\010\007\031\010\052\011\042\012\041\013\022\014\053" +
    "\025\026\026\047\027\007\030\025\031\015\032\050\033" +
    "\006\034\037\035\021\036\054\037\034\040\005\041\033" +
    "\042\055\043\040\052\046\055\020\056\017\060\035\061" +
    "\023\062\014\063\030\067\016\070\004\001\002\000\104" +
    "\004\011\005\032\006\010\007\031\010\052\011\042\012" +
    "\041\013\022\014\053\025\026\026\047\027\007\030\025" +
    "\031\015\032\050\033\006\034\037\035\021\036\054\037" +
    "\034\040\005\041\033\042\055\043\040\052\046\055\020" +
    "\056\017\060\035\061\023\062\014\063\030\067\016\070" +
    "\004\001\002\000\104\004\011\005\032\006\010\007\031" +
    "\010\052\011\042\012\041\013\022\014\053\025\026\026" +
    "\047\027\007\030\025\031\015\032\050\033\006\034\037" +
    "\035\021\036\054\037\034\040\005\041\033\042\055\043" +
    "\040\052\046\055\020\056\017\060\035\061\023\062\014" +
    "\063\030\067\016\070\004\001\002\000\032\015\uffb7\016" +
    "\uffb7\017\uffb7\020\uffb7\021\uffb7\022\uffb7\023\uffb7\024\uffb7" +
    "\051\uffb7\064\uffb7\065\uffb7\070\uffb7\001\002\000\104\004" +
    "\011\005\032\006\010\007\031\010\052\011\042\012\041" +
    "\013\022\014\053\025\026\026\047\027\007\030\025\031" +
    "\015\032\050\033\006\034\037\035\021\036\054\037\034" +
    "\040\005\041\033\042\055\043\040\052\046\055\020\056" +
    "\017\060\035\061\023\062\014\063\030\067\016\070\004" +
    "\001\002\000\004\027\317\001\002\000\004\044\320\001" +
    "\002\000\020\030\331\031\326\032\327\033\330\034\322" +
    "\035\323\045\321\001\002\000\004\050\347\001\002\000" +
    "\004\027\346\001\002\000\004\027\345\001\002\000\006" +
    "\045\uffee\065\343\001\002\000\004\045\336\001\002\000" +
    "\004\027\335\001\002\000\004\027\334\001\002\000\004" +
    "\027\333\001\002\000\004\027\332\001\002\000\006\045" +
    "\uffec\065\uffec\001\002\000\006\045\uffe9\065\uffe9\001\002" +
    "\000\006\045\uffea\065\uffea\001\002\000\006\045\uffeb\065" +
    "\uffeb\001\002\000\004\050\337\001\002\000\016\013\146" +
    "\014\131\025\133\036\134\037\150\040\135\001\002\000" +
    "\004\066\217\001\002\000\004\051\342\001\002\000\032" +
    "\015\ufffb\016\ufffb\017\ufffb\020\ufffb\021\ufffb\022\ufffb\023" +
    "\ufffb\024\ufffb\051\ufffb\064\ufffb\065\ufffb\070\ufffb\001\002" +
    "\000\016\030\331\031\326\032\327\033\330\034\322\035" +
    "\323\001\002\000\004\045\uffed\001\002\000\006\045\uffe7" +
    "\065\uffe7\001\002\000\006\045\uffe8\065\uffe8\001\002\000" +
    "\016\013\146\014\131\025\133\036\134\037\150\040\135" +
    "\001\002\000\004\066\217\001\002\000\004\051\352\001" +
    "\002\000\032\015\ufffc\016\ufffc\017\ufffc\020\ufffc\021\ufffc" +
    "\022\ufffc\023\ufffc\024\ufffc\051\ufffc\064\ufffc\065\ufffc\070" +
    "\ufffc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\350\000\024\002\044\003\012\004\043\005\035\006" +
    "\050\007\023\010\011\011\026\012\042\001\001\000\022" +
    "\004\313\005\035\006\050\007\023\010\011\011\026\012" +
    "\042\021\315\001\001\000\020\004\305\005\035\006\050" +
    "\007\023\010\011\011\026\012\042\001\001\000\020\004" +
    "\304\005\035\006\050\007\023\010\011\011\026\012\042" +
    "\001\001\000\020\004\303\005\035\006\050\007\023\010" +
    "\011\011\026\012\042\001\001\000\020\004\302\005\035" +
    "\006\050\007\023\010\011\011\026\012\042\001\001\000" +
    "\020\004\301\005\035\006\050\007\023\010\011\011\026" +
    "\012\042\001\001\000\002\001\001\000\020\004\277\005" +
    "\035\006\050\007\023\010\011\011\026\012\042\001\001" +
    "\000\020\004\276\005\035\006\050\007\023\010\011\011" +
    "\026\012\042\001\001\000\020\004\275\005\035\006\050" +
    "\007\023\010\011\011\026\012\042\001\001\000\020\004" +
    "\274\005\035\006\050\007\023\010\011\011\026\012\042" +
    "\001\001\000\004\014\270\001\001\000\004\013\266\001" +
    "\001\000\020\004\265\005\035\006\050\007\023\010\011" +
    "\011\026\012\042\001\001\000\020\004\264\005\035\006" +
    "\050\007\023\010\011\011\026\012\042\001\001\000\020" +
    "\004\263\005\035\006\050\007\023\010\011\011\026\012" +
    "\042\001\001\000\002\001\001\000\020\004\262\005\035" +
    "\006\050\007\023\010\011\011\026\012\042\001\001\000" +
    "\020\004\261\005\035\006\050\007\023\010\011\011\026" +
    "\012\042\001\001\000\002\001\001\000\020\004\260\005" +
    "\035\006\050\007\023\010\011\011\026\012\042\001\001" +
    "\000\020\004\257\005\035\006\050\007\023\010\011\011" +
    "\026\012\042\001\001\000\020\004\256\005\035\006\050" +
    "\007\023\010\011\011\026\012\042\001\001\000\020\004" +
    "\255\005\035\006\050\007\023\010\011\011\026\012\042" +
    "\001\001\000\020\004\254\005\035\006\050\007\023\010" +
    "\011\011\026\012\042\001\001\000\020\004\253\005\035" +
    "\006\050\007\023\010\011\011\026\012\042\001\001\000" +
    "\002\001\001\000\020\004\252\005\035\006\050\007\023" +
    "\010\011\011\026\012\042\001\001\000\020\004\251\005" +
    "\035\006\050\007\023\010\011\011\026\012\042\001\001" +
    "\000\020\004\250\005\035\006\050\007\023\010\011\011" +
    "\026\012\042\001\001\000\020\004\247\005\035\006\050" +
    "\007\023\010\011\011\026\012\042\001\001\000\002\001" +
    "\001\000\004\015\122\001\001\000\002\001\001\000\004" +
    "\013\110\001\001\000\002\001\001\000\020\004\104\005" +
    "\035\006\050\007\023\010\011\011\026\012\042\001\001" +
    "\000\002\001\001\000\020\004\103\005\035\006\050\007" +
    "\023\010\011\011\026\012\042\001\001\000\020\004\102" +
    "\005\035\006\050\007\023\010\011\011\026\012\042\001" +
    "\001\000\020\004\101\005\035\006\050\007\023\010\011" +
    "\011\026\012\042\001\001\000\020\004\055\005\035\006" +
    "\050\007\023\010\011\011\026\012\042\001\001\000\002" +
    "\001\001\000\020\004\100\005\035\006\050\007\023\010" +
    "\011\011\026\012\042\001\001\000\020\004\077\005\035" +
    "\006\050\007\023\010\011\011\026\012\042\001\001\000" +
    "\002\001\001\000\020\004\076\005\035\006\050\007\023" +
    "\010\011\011\026\012\042\001\001\000\020\004\075\005" +
    "\035\006\050\007\023\010\011\011\026\012\042\001\001" +
    "\000\020\004\074\005\035\006\050\007\023\010\011\011" +
    "\026\012\042\001\001\000\020\004\073\005\035\006\050" +
    "\007\023\010\011\011\026\012\042\001\001\000\020\004" +
    "\072\005\035\006\050\007\023\010\011\011\026\012\042" +
    "\001\001\000\020\004\071\005\035\006\050\007\023\010" +
    "\011\011\026\012\042\001\001\000\020\004\070\005\035" +
    "\006\050\007\023\010\011\011\026\012\042\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\004\107\005\035\006\050\007\023" +
    "\010\011\011\026\012\042\001\001\000\002\001\001\000" +
    "\004\014\114\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\004\116\005" +
    "\035\006\050\007\023\010\011\011\026\012\042\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\016" +
    "\136\017\143\025\131\026\140\027\144\030\135\031\146" +
    "\032\141\033\137\034\142\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\031\235\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\020\217\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\031\153\001\001\000\004\031\152\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\027\175\001" +
    "\001\000\004\027\174\001\001\000\004\027\173\001\001" +
    "\000\004\027\172\001\001\000\004\027\171\001\001\000" +
    "\004\027\170\001\001\000\004\027\167\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\016\177\017\143\025\131\026\140\027\144\030" +
    "\135\031\146\032\141\033\137\034\142\001\001\000\002" +
    "\001\001\000\004\026\215\001\001\000\004\026\214\001" +
    "\001\000\004\026\213\001\001\000\004\026\212\001\001" +
    "\000\004\026\211\001\001\000\004\026\210\001\001\000" +
    "\004\026\207\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\246" +
    "\001\001\000\004\013\244\001\001\000\004\014\245\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\014\267\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\013\272\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\300\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\004\304" +
    "\005\035\006\050\007\023\010\011\011\026\012\042\001" +
    "\001\000\020\004\275\005\035\006\050\007\023\010\011" +
    "\011\026\012\042\001\001\000\020\004\265\005\035\006" +
    "\050\007\023\010\011\011\026\012\042\001\001\000\020" +
    "\004\262\005\035\006\050\007\023\010\011\011\026\012" +
    "\042\001\001\000\020\004\252\005\035\006\050\007\023" +
    "\010\011\011\026\012\042\001\001\000\002\001\001\000" +
    "\020\004\104\005\035\006\050\007\023\010\011\011\026" +
    "\012\042\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\022\324\023\323\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\016\337\017\143\025\131\026\140\027\144\030\135\031" +
    "\146\032\141\033\137\034\142\001\001\000\004\020\340" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\022" +
    "\343\023\323\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\016\347\017\143\025\131\026" +
    "\140\027\144\030\135\031\146\032\141\033\137\034\142" +
    "\001\001\000\004\020\350\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser$actions {
  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action_part00000000(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= navidad EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // navidad ::= bolsanavidena 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("navidad",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // bolsanavidena ::= regalo regaloprincipal 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bolsanavidena",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // bolsanavidena ::= bolsanavidena regalo regaloprincipal 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bolsanavidena",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // regaloprincipal ::= FUNCTION SANTACLAUS MAIN ABRECUENTO CIERRECUENTO ABREREGALO juguetes garantia CIERRAREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprincipal",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-8)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // regalo ::= FUNCTION tiposregalo PERSONA ABRECUENTO CIERRECUENTO ABREREGALO juguetes garantia CIERRAREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-8)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // regalo ::= FUNCTION tiposregalo PERSONA ABRECUENTO monnos CIERRECUENTO ABREREGALO juguetes garantia CIERRAREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // garantia ::= ENTREGA L_SANTACLAUS FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("garantia",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // garantia ::= ENTREGA L_PERENOEL FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("garantia",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // garantia ::= ENTREGA L_FATHERCHRISTMAS FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("garantia",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // garantia ::= ENTREGA L_KRISKRINGLE FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("garantia",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // garantia ::= ENTREGA L_DEDMOROZ FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("garantia",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // garantia ::= ENTREGA L_PAPANOEL FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("garantia",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // tiposregalo ::= SANTACLAUS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposregalo",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // tiposregalo ::= PERENOEL 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposregalo",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // tiposregalo ::= FATHERCHRISTMAS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposregalo",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // tiposregalo ::= KRISKRINGLE 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposregalo",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // tiposregalo ::= DEDMOROZ 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposregalo",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // tiposregalo ::= PAPANOEL 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposregalo",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // monnos ::= tiposmonnos 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("monnos",16, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // monnos ::= tiposmonnos COMA monnos 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("monnos",16, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // tiposmonnos ::= SANTACLAUS PERSONA 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposmonnos",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // tiposmonnos ::= PERENOEL PERSONA 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposmonnos",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // tiposmonnos ::= FATHERCHRISTMAS PERSONA 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposmonnos",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // tiposmonnos ::= KRISKRINGLE PERSONA 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposmonnos",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // tiposmonnos ::= DEDMOROZ PERSONA 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposmonnos",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // tiposmonnos ::= PAPANOEL PERSONA 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tiposmonnos",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // envolturas ::= ABRECUENTO juguetes CIERRECUENTO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("envolturas",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // envolturas ::= ABREEMPAQUE juguetes CIERREEMPAQUE 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("envolturas",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // envolturas ::= ABREREGALO juguetes CIERRAREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("envolturas",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // envolturas ::= ABRECUENTO CIERRECUENTO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("envolturas",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // envolturas ::= ABREEMPAQUE CIERREEMPAQUE 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("envolturas",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // envolturas ::= ABREREGALO CIERRAREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("envolturas",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // juguetes ::= tipojuguetes FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetes",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // juguetes ::= tipojuguetes FINREGALO juguetes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetes",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // tipojuguetes ::= juguetesaritmeticos 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tipojuguetes",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // tipojuguetes ::= juguetesrelacionales 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tipojuguetes",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // tipojuguetes ::= jugueteslogicos 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tipojuguetes",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // tipojuguetes ::= juguetesunarios 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tipojuguetes",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // tipojuguetes ::= jugueteasignacion 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tipojuguetes",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // tipojuguetes ::= juguetesdecontrol 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("tipojuguetes",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // juguetesaritmeticos ::= piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetesaritmeticos",19, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // juguetesaritmeticos ::= piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetesaritmeticos",19, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // piezasenteras ::= piezasenteras RUDOLPH piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // piezasenteras ::= piezasenteras DASHER piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // piezasenteras ::= piezasenteras DANCER piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // piezasenteras ::= piezasenteras PRANCER piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // piezasenteras ::= piezasenteras VIXEN piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // piezasenteras ::= piezasenteras COMET piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // piezasenteras ::= piezasenteras CUPID piezasenteras 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // piezasenteras ::= L_SANTACLAUS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasenteras",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // piezasflotantes ::= piezasflotantes RUDOLPH piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // piezasflotantes ::= piezasflotantes DASHER piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // piezasflotantes ::= piezasflotantes DANCER piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // piezasflotantes ::= piezasflotantes PRANCER piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // piezasflotantes ::= piezasflotantes VIXEN piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // piezasflotantes ::= piezasflotantes COMET piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // piezasflotantes ::= piezasflotantes CUPID piezasflotantes 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // piezasflotantes ::= L_PERENOEL 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("piezasflotantes",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // jugueteslogicos ::= jugueteslogicos MELCHOR jugueteslogicos 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jugueteslogicos",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // jugueteslogicos ::= jugueteslogicos GASPAR jugueteslogicos 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jugueteslogicos",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // jugueteslogicos ::= BALTASAR jugueteslogicos 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jugueteslogicos",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // jugueteslogicos ::= L_FATHERCHRISTMAS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jugueteslogicos",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // juguetesunarios ::= GRINCH L_SANTACLAUS FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetesunarios",24, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // juguetesunarios ::= QUIEN L_SANTACLAUS FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetesunarios",24, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // juguetesunarios ::= GRINCH L_PERENOEL FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetesunarios",24, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // juguetesunarios ::= QUIEN L_PERENOEL FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("juguetesunarios",24, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // regalo ::= regaloprin 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // regalo ::= regalocomprado 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // regalo ::= regalomanual 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // regalo ::= regalopersonalizado 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // regalo ::= regaloespecial 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // regalo ::= regaloscondicionales 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // regalo ::= MAIN regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // regalo ::= FUNCTION regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // regalo ::= PERSONA regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // regalo ::= SANTACLAUS regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // regalo ::= PERENOEL regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // regalo ::= FATHERCHRISTMAS regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // regalo ::= KRISKRINGLE regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // regalo ::= DEDMOROZ regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // regalo ::= PAPANOEL regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // regalo ::= L_SANTACLAUS regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // regalo ::= L_PERENOEL regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // regalo ::= L_FATHERCHRISTMAS regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // regalo ::= L_KRISKRINGLE regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // regalo ::= L_DEDMOROZ regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // regalo ::= L_PAPANOEL regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // regalo ::= regalo FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // regalo ::= ENVIA regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalo",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // regaloprin ::= RUDOLPH regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprin",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // regaloprin ::= DASHER regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprin",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // regaloprin ::= DANCER regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprin",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // regaloprin ::= PRANCER regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprin",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // regaloprin ::= VIXEN regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprin",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // regaloprin ::= COMET regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprin",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // regaloprin ::= CUPID regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloprin",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // regalocomprado ::= regalo HERMEY regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalocomprado",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // regalocomprado ::= regalo BUDDY regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalocomprado",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // regalocomprado ::= regalo JINGLE regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalocomprado",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // regalocomprado ::= regalo JANGLE regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalocomprado",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // regalocomprado ::= regalo PEPPERMINT regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalocomprado",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // regalocomprado ::= regalo WUNORSE regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalocomprado",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // regalomanual ::= regalo MELCHOR regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalomanual",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // regalomanual ::= regalo GASPAR regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalomanual",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // regalomanual ::= BALTASAR regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalomanual",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // regalopersonalizado ::= GRINCH regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalopersonalizado",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // regalopersonalizado ::= QUIEN regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regalopersonalizado",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // regaloespecial ::= NARRA regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloespecial",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // regaloespecial ::= ESCUCHA regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloespecial",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // regaloespecial ::= regalo COMA regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloespecial",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // regaloespecial ::= LOCAL PERSONA ENTREGA regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloespecial",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // regaloespecial ::= HACE bloqueregalado REVISA condicionregalo FINREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloespecial",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // regaloespecial ::= ENVUELVE condicionregalo bloqueregalado 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloespecial",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // regaloespecial ::= CORTA regalo 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloespecial",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // regaloscondicionales ::= ELFO condicionregalo bloqueregalado 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloscondicionales",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // regaloscondicionales ::= regaloscondicionales HADA condicionregalo bloqueregalado 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloscondicionales",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // regaloscondicionales ::= regaloscondicionales DUENDE bloqueregalado 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("regaloscondicionales",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // condicionregalo ::= ABRECUENTO L_FATHERCHRISTMAS CIERRECUENTO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("condicionregalo",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // bloqueregalado ::= ABREREGALO regalo CIERRAREGALO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bloqueregalado",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
              return CUP$Parser$do_action_part00000000(
                               CUP$Parser$act_num,
                               CUP$Parser$parser,
                               CUP$Parser$stack,
                               CUP$Parser$top);
    }
}

}
